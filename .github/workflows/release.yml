name: Release

on:
  push:
    tags:
      - v*

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup toolchain
      run: |
        rustup target add i686-pc-windows-msvc
        rustup component add clippy
    - name: Run clippy
      run: cargo clippy -- -D warnings
    - name: Build release
      run: cargo build --target=i686-pc-windows-msvc --release
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: bftracks-launcher-32bit
        path: |
          target\i686-pc-windows-msvc\release\*.exe
          target\i686-pc-windows-msvc\release\*.pdb
  create-draft-release:
    runs-on: ubuntu-latest
    needs: ["build"]
    outputs:
      asset_upload_url: ${{ steps.create-release.outputs.upload_url }}
    steps:
    - name: Create draft release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: BFTracks Launcher ${{ github.ref }}
        draft: true
  publish-release-build:
    runs-on: ubuntu-latest
    needs: ["build"]
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: bftracks-launcher-32bit
    - name: Publish release executable
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.publish-draft-release.outputs.asset_upload_url }}
        asset_path: ./bftracks-launcher.exe
        asset_name: bftracks-launcher.exe
        asset_content_type: application/exe